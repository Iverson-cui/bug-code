#include <cs50.h>
#include <stdio.h>
#include<ctype.h>
#include<string.h>

int check(string a);

string change(string a);

int main(int argc, string argv[])
{
    if( check(argv[1]) == 1){
        printf("Key must contain 26 characters");
        return 1;
    }
    else if( (check(argv[1]) == 2) || (argc != 2)){
        printf("Usage: ./substitution key");
        return 1;
    }
    else{
        // the key is valid now
        string bc = get_string("Plaintext: ");
        // get the input
    int input_length = strlen(bc);
    string key = argv[1];
    for(int i=0;i<strlen(bc);i++){
        if(!(islower(bc[i]))){ // if the input character is uppercase
            bc[i] = toupper(key[bc[i]-'a');
        }
        else{ // if the input character is lowercase
            bc[i] = tolower(bc[i]-'A');
        }
        printf("\ncipher text: %s",bc);
        return 0;
    }
}
}


int check(string a){
    int times = strlen(a);
    if(times != 26){   // the total number is not 26
        return 1;
    }
    else if(times == 0){ // there is no input key
        return 2;
    }
    for(int i=0;i<times;i++){
        if(!( isalpha(a[i]) )){
            return 1;    // some character is not character
        }
    // how to make sure all of the  characters in key only appear once?
    }
    return 0;
}
